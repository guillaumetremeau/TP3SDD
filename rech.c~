
#include "rech.h"

void Insertion(dico_t * dico, char * mot){
	dico_t * ptrDico = dico;
	char * ptrMot = mot;
	dico_t * res = dico;
	dico_t * prec = ptrDico;
	int taille = 0;

	Recherche(ptrDico, ptrMot, res, &taille);

	ptrDico = res;
	ptrDico = ptrDico->fils;
	ptrMot = taille;
	ptrMot = ptrMot+1;

	while(*ptrMot != NULL){
		while((tolower((*ptrDico)->lettre) < tolower((*ptrMot)->lettre)) && (*ptrDico != NULL)){
			prec = ptrDico;
			ptrDico = ptrDico->frere;
		}
		while(ptrMot+1 != NULL){
			alloueLettre(prec, ptrMot);
			prec = prec->frere
		}
	}

}


void Recherche(dico_t * ptrDico, char * ptrMot, dico_t * res, int * taille){
	int fin = 0;
	while(fin != 0){
		while(*ptrMot != NULL){
			while((tolower((*ptrMot)->lettre) != tolower((*ptrDico)->lettre)) && (*ptrDico != NULL)){
				ptrDico = ptrDico->frere;
			}		
			if(tolower((*ptrMot)->lettre) = tolower((*ptrDico)->lettre)){		
				res = ptrDico;
				*taille = ptrMot;
				ptrDico = ptrDico->fils;
				ptrMot = ptrMot + 1;
			}
			else{
				fin = 1;
			}
		}
	}
}


void alloueLettre(dico_t * ptrDico, char lettre){
	dico_t * nouvLettre = (dico_t *) malloc(sizeof(dico_t));
	nouvLettre->lettre = Lettre;
	nouvLettre->fils = ptrDico;
	ptrDico = nouvLettre ;
}

